// SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
//
// THIS FILE IS AUTOGENERATED BY CARGO-LIBBPF-GEN!

pub use self::imp::*;

#[allow(dead_code)]
#[allow(non_snake_case)]
#[allow(non_camel_case_types)]
#[allow(clippy::transmute_ptr_to_ref)]
#[allow(clippy::upper_case_acronyms)]
#[warn(single_use_lifetimes)]
mod imp {
    use libbpf_rs::libbpf_sys;
    use libbpf_rs::skel::OpenSkel;
    use libbpf_rs::skel::Skel;
    use libbpf_rs::skel::SkelBuilder;

    fn build_skel_config(
    ) -> libbpf_rs::Result<libbpf_rs::__internal_skel::ObjectSkeletonConfig<'static>> {
        let mut builder = libbpf_rs::__internal_skel::ObjectSkeletonConfigBuilder::new(DATA);
        builder
            .name("sockfilter_bpf")
            .map("rb", false)
            .prog("socket_handler");

        builder.build()
    }

    #[derive(Default)]
    pub struct SockfilterSkelBuilder {
        pub obj_builder: libbpf_rs::ObjectBuilder,
    }

    impl<'a> SkelBuilder<'a> for SockfilterSkelBuilder {
        type Output = OpenSockfilterSkel<'a>;
        fn open(mut self) -> libbpf_rs::Result<OpenSockfilterSkel<'a>> {
            let mut skel_config = build_skel_config()?;
            let open_opts = self.obj_builder.opts(std::ptr::null());

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenSockfilterSkel { obj, skel_config })
        }

        fn open_opts(
            self,
            open_opts: libbpf_sys::bpf_object_open_opts,
        ) -> libbpf_rs::Result<OpenSockfilterSkel<'a>> {
            let mut skel_config = build_skel_config()?;

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenSockfilterSkel { obj, skel_config })
        }

        fn object_builder(&self) -> &libbpf_rs::ObjectBuilder {
            &self.obj_builder
        }
        fn object_builder_mut(&mut self) -> &mut libbpf_rs::ObjectBuilder {
            &mut self.obj_builder
        }
    }

    pub struct OpenSockfilterMaps<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenSockfilterMaps<'_> {
        pub fn rb(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("rb").unwrap()
        }
    }

    pub struct OpenSockfilterMapsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenSockfilterMapsMut<'_> {
        pub fn rb(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("rb").unwrap()
        }
    }

    pub struct OpenSockfilterProgs<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenSockfilterProgs<'_> {
        pub fn socket_handler(&self) -> &libbpf_rs::OpenProgram {
            self.inner.prog("socket_handler").unwrap()
        }
    }

    pub struct OpenSockfilterProgsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenSockfilterProgsMut<'_> {
        pub fn socket_handler(&mut self) -> &mut libbpf_rs::OpenProgram {
            self.inner.prog_mut("socket_handler").unwrap()
        }
    }

    pub struct OpenSockfilterSkel<'a> {
        pub obj: libbpf_rs::OpenObject,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
    }

    impl<'a> OpenSkel for OpenSockfilterSkel<'a> {
        type Output = SockfilterSkel<'a>;
        fn load(mut self) -> libbpf_rs::Result<SockfilterSkel<'a>> {
            let ret = unsafe { libbpf_sys::bpf_object__load_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::Object::from_ptr(self.obj.take_ptr())? };

            Ok(SockfilterSkel {
                obj,
                skel_config: self.skel_config,
                links: SockfilterLinks::default(),
            })
        }

        fn open_object(&self) -> &libbpf_rs::OpenObject {
            &self.obj
        }

        fn open_object_mut(&mut self) -> &mut libbpf_rs::OpenObject {
            &mut self.obj
        }
    }
    impl OpenSockfilterSkel<'_> {
        pub fn progs(&self) -> OpenSockfilterProgs<'_> {
            OpenSockfilterProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> OpenSockfilterProgsMut<'_> {
            OpenSockfilterProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> OpenSockfilterMaps<'_> {
            OpenSockfilterMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> OpenSockfilterMapsMut<'_> {
            OpenSockfilterMapsMut {
                inner: &mut self.obj,
            }
        }
    }

    pub struct SockfilterMaps<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl SockfilterMaps<'_> {
        pub fn rb(&self) -> &libbpf_rs::Map {
            self.inner.map("rb").unwrap()
        }
    }

    pub struct SockfilterMapsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl SockfilterMapsMut<'_> {
        pub fn rb(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("rb").unwrap()
        }
    }

    pub struct SockfilterProgs<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl SockfilterProgs<'_> {
        pub fn socket_handler(&self) -> &libbpf_rs::Program {
            self.inner.prog("socket_handler").unwrap()
        }
    }

    pub struct SockfilterProgsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl SockfilterProgsMut<'_> {
        pub fn socket_handler(&mut self) -> &mut libbpf_rs::Program {
            self.inner.prog_mut("socket_handler").unwrap()
        }
    }

    #[derive(Default)]
    pub struct SockfilterLinks {
        pub socket_handler: Option<libbpf_rs::Link>,
    }

    pub struct SockfilterSkel<'a> {
        pub obj: libbpf_rs::Object,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
        pub links: SockfilterLinks,
    }

    unsafe impl Send for SockfilterSkel<'_> {}
    unsafe impl Sync for SockfilterSkel<'_> {}

    impl Skel for SockfilterSkel<'_> {
        fn object(&self) -> &libbpf_rs::Object {
            &self.obj
        }

        fn object_mut(&mut self) -> &mut libbpf_rs::Object {
            &mut self.obj
        }

        fn attach(&mut self) -> libbpf_rs::Result<()> {
            let ret = unsafe { libbpf_sys::bpf_object__attach_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            self.links = SockfilterLinks {
                socket_handler: (|| {
                    Ok(core::ptr::NonNull::new(self.skel_config.prog_link_ptr(0)?)
                        .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }))
                })()?,
            };

            Ok(())
        }
    }
    impl SockfilterSkel<'_> {
        pub fn progs(&self) -> SockfilterProgs<'_> {
            SockfilterProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> SockfilterProgsMut<'_> {
            SockfilterProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> SockfilterMaps<'_> {
            SockfilterMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> SockfilterMapsMut<'_> {
            SockfilterMapsMut {
                inner: &mut self.obj,
            }
        }
    }

    const DATA: &[u8] = &[
        127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 247, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
        0, 64, 0, 9, 0, 1, 0, 0, 46, 115, 116, 114, 116, 97, 98, 0, 46, 115, 121, 109, 116, 97, 98,
        0, 115, 111, 99, 107, 101, 116, 0, 108, 105, 99, 101, 110, 115, 101, 0, 46, 109, 97, 112,
        115, 0, 115, 111, 99, 107, 102, 105, 108, 116, 101, 114, 46, 98, 112, 102, 46, 99, 0, 76,
        66, 66, 48, 95, 54, 0, 76, 66, 66, 48, 95, 53, 0, 115, 111, 99, 107, 101, 116, 95, 104, 97,
        110, 100, 108, 101, 114, 0, 114, 98, 0, 76, 73, 67, 69, 78, 83, 69, 0, 46, 114, 101, 108,
        115, 111, 99, 107, 101, 116, 0, 46, 66, 84, 70, 0, 46, 66, 84, 70, 46, 101, 120, 116, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 4, 0,
        241, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0, 3, 0, 56, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 3, 0, 128, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 69, 0, 0, 0, 18, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 2, 0, 0, 0, 0, 0, 0, 84, 0, 0,
        0, 17, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 17, 0, 4, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 191, 22, 0, 0, 0, 0, 0, 0, 191, 163, 0, 0,
        0, 0, 0, 0, 7, 3, 0, 0, 250, 255, 255, 255, 183, 2, 0, 0, 12, 0, 0, 0, 183, 4, 0, 0, 2, 0,
        0, 0, 133, 0, 0, 0, 26, 0, 0, 0, 105, 161, 250, 255, 0, 0, 0, 0, 191, 18, 0, 0, 0, 0, 0, 0,
        220, 2, 0, 0, 16, 0, 0, 0, 107, 42, 250, 255, 0, 0, 0, 0, 183, 8, 0, 0, 0, 0, 0, 0, 85, 1,
        59, 0, 8, 0, 0, 0, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 254, 255, 255, 255, 191, 97, 0,
        0, 0, 0, 0, 0, 183, 2, 0, 0, 20, 0, 0, 0, 183, 4, 0, 0, 2, 0, 0, 0, 133, 0, 0, 0, 26, 0, 0,
        0, 105, 161, 254, 255, 0, 0, 0, 0, 87, 1, 0, 0, 63, 255, 0, 0, 85, 1, 50, 0, 0, 0, 0, 0,
        183, 8, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0,
        24, 0, 0, 0, 183, 3, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 131, 0, 0, 0, 191, 7, 0, 0, 0, 0, 0,
        0, 21, 7, 42, 0, 0, 0, 0, 0, 191, 115, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 12, 0, 0, 0, 191, 97,
        0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 23, 0, 0, 0, 183, 4, 0, 0, 1, 0, 0, 0, 133, 0, 0, 0, 26, 0,
        0, 0, 97, 113, 12, 0, 0, 0, 0, 0, 21, 1, 11, 0, 47, 0, 0, 0, 191, 97, 0, 0, 0, 0, 0, 0,
        183, 2, 0, 0, 26, 0, 0, 0, 191, 115, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 4, 0, 0, 0, 133, 0, 0,
        0, 26, 0, 0, 0, 191, 115, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 4, 0, 0, 0, 191, 97, 0, 0, 0, 0, 0,
        0, 183, 2, 0, 0, 30, 0, 0, 0, 183, 4, 0, 0, 4, 0, 0, 0, 133, 0, 0, 0, 26, 0, 0, 0, 191,
        163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 253, 255, 255, 255, 191, 97, 0, 0, 0, 0, 0, 0, 183, 2,
        0, 0, 14, 0, 0, 0, 183, 4, 0, 0, 1, 0, 0, 0, 133, 0, 0, 0, 26, 0, 0, 0, 113, 162, 253, 255,
        0, 0, 0, 0, 103, 2, 0, 0, 2, 0, 0, 0, 87, 2, 0, 0, 60, 0, 0, 0, 7, 2, 0, 0, 14, 0, 0, 0,
        191, 115, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 8, 0, 0, 0, 191, 97, 0, 0, 0, 0, 0, 0, 183, 4, 0,
        0, 4, 0, 0, 0, 133, 0, 0, 0, 26, 0, 0, 0, 97, 97, 4, 0, 0, 0, 0, 0, 99, 23, 16, 0, 0, 0, 0,
        0, 97, 97, 40, 0, 0, 0, 0, 0, 99, 23, 20, 0, 0, 0, 0, 0, 191, 113, 0, 0, 0, 0, 0, 0, 183,
        2, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 132, 0, 0, 0, 97, 104, 0, 0, 0, 0, 0, 0, 191, 128, 0, 0,
        0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 68, 117, 97, 108, 32, 66, 83, 68, 47, 71, 80, 76, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 6, 0, 0, 0, 159, 235, 1, 0, 24, 0, 0, 0, 0, 0, 0, 0, 184, 3, 0, 0, 184, 3, 0, 0, 176, 5,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 27, 0, 0, 0, 5, 0, 0, 0, 0, 0,
        0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
        0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 2, 0, 0, 4, 16, 0, 0, 0, 25, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 5, 0, 0, 0, 64, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
        14, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 10, 0, 0, 0, 45, 0, 0, 0, 34, 0, 0, 4,
        192, 0, 0, 0, 55, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 11, 0, 0, 0, 32, 0, 0, 0,
        68, 0, 0, 0, 11, 0, 0, 0, 64, 0, 0, 0, 73, 0, 0, 0, 11, 0, 0, 0, 96, 0, 0, 0, 87, 0, 0, 0,
        11, 0, 0, 0, 128, 0, 0, 0, 96, 0, 0, 0, 11, 0, 0, 0, 160, 0, 0, 0, 109, 0, 0, 0, 11, 0, 0,
        0, 192, 0, 0, 0, 118, 0, 0, 0, 11, 0, 0, 0, 224, 0, 0, 0, 129, 0, 0, 0, 11, 0, 0, 0, 0, 1,
        0, 0, 138, 0, 0, 0, 11, 0, 0, 0, 32, 1, 0, 0, 154, 0, 0, 0, 11, 0, 0, 0, 64, 1, 0, 0, 162,
        0, 0, 0, 11, 0, 0, 0, 96, 1, 0, 0, 171, 0, 0, 0, 13, 0, 0, 0, 128, 1, 0, 0, 174, 0, 0, 0,
        11, 0, 0, 0, 32, 2, 0, 0, 179, 0, 0, 0, 11, 0, 0, 0, 64, 2, 0, 0, 190, 0, 0, 0, 11, 0, 0,
        0, 96, 2, 0, 0, 195, 0, 0, 0, 11, 0, 0, 0, 128, 2, 0, 0, 204, 0, 0, 0, 11, 0, 0, 0, 160, 2,
        0, 0, 212, 0, 0, 0, 11, 0, 0, 0, 192, 2, 0, 0, 219, 0, 0, 0, 11, 0, 0, 0, 224, 2, 0, 0,
        230, 0, 0, 0, 11, 0, 0, 0, 0, 3, 0, 0, 240, 0, 0, 0, 14, 0, 0, 0, 32, 3, 0, 0, 251, 0, 0,
        0, 14, 0, 0, 0, 160, 3, 0, 0, 5, 1, 0, 0, 11, 0, 0, 0, 32, 4, 0, 0, 17, 1, 0, 0, 11, 0, 0,
        0, 64, 4, 0, 0, 28, 1, 0, 0, 11, 0, 0, 0, 96, 4, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 128, 4, 0,
        0, 38, 1, 0, 0, 17, 0, 0, 0, 192, 4, 0, 0, 45, 1, 0, 0, 11, 0, 0, 0, 0, 5, 0, 0, 54, 1, 0,
        0, 11, 0, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 64, 5, 0, 0, 63, 1, 0, 0, 11, 0, 0,
        0, 128, 5, 0, 0, 72, 1, 0, 0, 21, 0, 0, 0, 160, 5, 0, 0, 84, 1, 0, 0, 17, 0, 0, 0, 192, 5,
        0, 0, 93, 1, 0, 0, 0, 0, 0, 8, 12, 0, 0, 0, 99, 1, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 11, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 0, 0, 0, 0, 11, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 8, 0, 0,
        0, 112, 1, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 28, 0, 0, 0, 122, 1, 0,
        0, 0, 0, 0, 8, 18, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 5, 8, 0, 0, 0, 147, 1, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 29,
        0, 0, 0, 150, 1, 0, 0, 0, 0, 0, 8, 22, 0, 0, 0, 155, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 13, 2, 0, 0, 0, 169, 1, 0, 0, 9, 0, 0, 0, 173, 1, 0, 0, 1, 0, 0,
        12, 23, 0, 0, 0, 188, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3,
        0, 0, 0, 0, 25, 0, 0, 0, 4, 0, 0, 0, 13, 0, 0, 0, 193, 1, 0, 0, 0, 0, 0, 14, 26, 0, 0, 0,
        1, 0, 0, 0, 201, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 215, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0,
        155, 5, 0, 0, 1, 0, 0, 15, 13, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 163, 5, 0, 0,
        1, 0, 0, 15, 16, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 105, 110, 116, 0, 95, 95,
        65, 82, 82, 65, 89, 95, 83, 73, 90, 69, 95, 84, 89, 80, 69, 95, 95, 0, 116, 121, 112, 101,
        0, 109, 97, 120, 95, 101, 110, 116, 114, 105, 101, 115, 0, 114, 98, 0, 95, 95, 115, 107,
        95, 98, 117, 102, 102, 0, 108, 101, 110, 0, 112, 107, 116, 95, 116, 121, 112, 101, 0, 109,
        97, 114, 107, 0, 113, 117, 101, 117, 101, 95, 109, 97, 112, 112, 105, 110, 103, 0, 112,
        114, 111, 116, 111, 99, 111, 108, 0, 118, 108, 97, 110, 95, 112, 114, 101, 115, 101, 110,
        116, 0, 118, 108, 97, 110, 95, 116, 99, 105, 0, 118, 108, 97, 110, 95, 112, 114, 111, 116,
        111, 0, 112, 114, 105, 111, 114, 105, 116, 121, 0, 105, 110, 103, 114, 101, 115, 115, 95,
        105, 102, 105, 110, 100, 101, 120, 0, 105, 102, 105, 110, 100, 101, 120, 0, 116, 99, 95,
        105, 110, 100, 101, 120, 0, 99, 98, 0, 104, 97, 115, 104, 0, 116, 99, 95, 99, 108, 97, 115,
        115, 105, 100, 0, 100, 97, 116, 97, 0, 100, 97, 116, 97, 95, 101, 110, 100, 0, 110, 97,
        112, 105, 95, 105, 100, 0, 102, 97, 109, 105, 108, 121, 0, 114, 101, 109, 111, 116, 101,
        95, 105, 112, 52, 0, 108, 111, 99, 97, 108, 95, 105, 112, 52, 0, 114, 101, 109, 111, 116,
        101, 95, 105, 112, 54, 0, 108, 111, 99, 97, 108, 95, 105, 112, 54, 0, 114, 101, 109, 111,
        116, 101, 95, 112, 111, 114, 116, 0, 108, 111, 99, 97, 108, 95, 112, 111, 114, 116, 0, 100,
        97, 116, 97, 95, 109, 101, 116, 97, 0, 116, 115, 116, 97, 109, 112, 0, 119, 105, 114, 101,
        95, 108, 101, 110, 0, 103, 115, 111, 95, 115, 101, 103, 115, 0, 103, 115, 111, 95, 115,
        105, 122, 101, 0, 116, 115, 116, 97, 109, 112, 95, 116, 121, 112, 101, 0, 104, 119, 116,
        115, 116, 97, 109, 112, 0, 95, 95, 117, 51, 50, 0, 117, 110, 115, 105, 103, 110, 101, 100,
        32, 105, 110, 116, 0, 102, 108, 111, 119, 95, 107, 101, 121, 115, 0, 95, 95, 117, 54, 52,
        0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 32, 108, 111, 110, 103,
        0, 115, 107, 0, 95, 95, 117, 56, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104,
        97, 114, 0, 115, 107, 98, 0, 115, 111, 99, 107, 101, 116, 95, 104, 97, 110, 100, 108, 101,
        114, 0, 99, 104, 97, 114, 0, 76, 73, 67, 69, 78, 83, 69, 0, 98, 112, 102, 95, 102, 108,
        111, 119, 95, 107, 101, 121, 115, 0, 98, 112, 102, 95, 115, 111, 99, 107, 0, 47, 114, 111,
        111, 116, 47, 98, 112, 102, 45, 115, 97, 109, 112, 108, 101, 115, 47, 114, 117, 115, 116,
        45, 101, 120, 97, 109, 112, 108, 101, 115, 47, 115, 114, 99, 47, 98, 112, 102, 47, 115,
        111, 99, 107, 102, 105, 108, 116, 101, 114, 46, 98, 112, 102, 46, 99, 0, 105, 110, 116, 32,
        115, 111, 99, 107, 101, 116, 95, 104, 97, 110, 100, 108, 101, 114, 40, 115, 116, 114, 117,
        99, 116, 32, 95, 95, 115, 107, 95, 98, 117, 102, 102, 32, 42, 115, 107, 98, 41, 0, 9, 98,
        112, 102, 95, 115, 107, 98, 95, 108, 111, 97, 100, 95, 98, 121, 116, 101, 115, 40, 115,
        107, 98, 44, 32, 49, 50, 44, 32, 38, 112, 114, 111, 116, 111, 44, 32, 50, 41, 59, 0, 9,
        112, 114, 111, 116, 111, 32, 61, 32, 95, 95, 98, 112, 102, 95, 110, 116, 111, 104, 115, 40,
        112, 114, 111, 116, 111, 41, 59, 0, 9, 105, 102, 32, 40, 112, 114, 111, 116, 111, 32, 33,
        61, 32, 69, 84, 72, 95, 80, 95, 73, 80, 41, 0, 9, 98, 112, 102, 95, 115, 107, 98, 95, 108,
        111, 97, 100, 95, 98, 121, 116, 101, 115, 40, 115, 107, 98, 44, 32, 110, 104, 111, 102,
        102, 32, 43, 32, 111, 102, 102, 115, 101, 116, 111, 102, 40, 115, 116, 114, 117, 99, 116,
        32, 105, 112, 104, 100, 114, 44, 32, 102, 114, 97, 103, 95, 111, 102, 102, 41, 44, 32, 38,
        102, 114, 97, 103, 95, 111, 102, 102, 44, 32, 50, 41, 59, 0, 9, 102, 114, 97, 103, 95, 111,
        102, 102, 32, 61, 32, 95, 95, 98, 112, 102, 95, 110, 116, 111, 104, 115, 40, 102, 114, 97,
        103, 95, 111, 102, 102, 41, 59, 0, 9, 114, 101, 116, 117, 114, 110, 32, 102, 114, 97, 103,
        95, 111, 102, 102, 32, 38, 32, 40, 73, 80, 95, 77, 70, 32, 124, 32, 73, 80, 95, 79, 70, 70,
        83, 69, 84, 41, 59, 0, 9, 105, 102, 32, 40, 105, 112, 95, 105, 115, 95, 102, 114, 97, 103,
        109, 101, 110, 116, 40, 115, 107, 98, 44, 32, 110, 104, 111, 102, 102, 41, 41, 0, 9, 101,
        32, 61, 32, 98, 112, 102, 95, 114, 105, 110, 103, 98, 117, 102, 95, 114, 101, 115, 101,
        114, 118, 101, 40, 38, 114, 98, 44, 32, 115, 105, 122, 101, 111, 102, 40, 42, 101, 41, 44,
        32, 48, 41, 59, 0, 9, 105, 102, 32, 40, 33, 101, 41, 0, 9, 98, 112, 102, 95, 115, 107, 98,
        95, 108, 111, 97, 100, 95, 98, 121, 116, 101, 115, 40, 115, 107, 98, 44, 32, 110, 104, 111,
        102, 102, 32, 43, 32, 111, 102, 102, 115, 101, 116, 111, 102, 40, 115, 116, 114, 117, 99,
        116, 32, 105, 112, 104, 100, 114, 44, 32, 112, 114, 111, 116, 111, 99, 111, 108, 41, 44,
        32, 38, 101, 45, 62, 105, 112, 95, 112, 114, 111, 116, 111, 44, 32, 49, 41, 59, 0, 9, 105,
        102, 32, 40, 101, 45, 62, 105, 112, 95, 112, 114, 111, 116, 111, 32, 33, 61, 32, 73, 80,
        80, 82, 79, 84, 79, 95, 71, 82, 69, 41, 32, 123, 0, 9, 9, 98, 112, 102, 95, 115, 107, 98,
        95, 108, 111, 97, 100, 95, 98, 121, 116, 101, 115, 40, 115, 107, 98, 44, 32, 110, 104, 111,
        102, 102, 32, 43, 32, 111, 102, 102, 115, 101, 116, 111, 102, 40, 115, 116, 114, 117, 99,
        116, 32, 105, 112, 104, 100, 114, 44, 32, 115, 97, 100, 100, 114, 41, 44, 32, 38, 40, 101,
        45, 62, 115, 114, 99, 95, 97, 100, 100, 114, 41, 44, 32, 52, 41, 59, 0, 9, 9, 98, 112, 102,
        95, 115, 107, 98, 95, 108, 111, 97, 100, 95, 98, 121, 116, 101, 115, 40, 115, 107, 98, 44,
        32, 110, 104, 111, 102, 102, 32, 43, 32, 111, 102, 102, 115, 101, 116, 111, 102, 40, 115,
        116, 114, 117, 99, 116, 32, 105, 112, 104, 100, 114, 44, 32, 100, 97, 100, 100, 114, 41,
        44, 32, 38, 40, 101, 45, 62, 100, 115, 116, 95, 97, 100, 100, 114, 41, 44, 32, 52, 41, 59,
        0, 9, 98, 112, 102, 95, 115, 107, 98, 95, 108, 111, 97, 100, 95, 98, 121, 116, 101, 115,
        40, 115, 107, 98, 44, 32, 110, 104, 111, 102, 102, 32, 43, 32, 48, 44, 32, 38, 118, 101,
        114, 108, 101, 110, 44, 32, 49, 41, 59, 0, 9, 98, 112, 102, 95, 115, 107, 98, 95, 108, 111,
        97, 100, 95, 98, 121, 116, 101, 115, 40, 115, 107, 98, 44, 32, 110, 104, 111, 102, 102, 32,
        43, 32, 40, 40, 118, 101, 114, 108, 101, 110, 32, 38, 32, 48, 120, 70, 41, 32, 60, 60, 32,
        50, 41, 44, 32, 38, 40, 101, 45, 62, 112, 111, 114, 116, 115, 41, 44, 32, 52, 41, 59, 0, 9,
        101, 45, 62, 112, 107, 116, 95, 116, 121, 112, 101, 32, 61, 32, 115, 107, 98, 45, 62, 112,
        107, 116, 95, 116, 121, 112, 101, 59, 0, 9, 101, 45, 62, 105, 102, 105, 110, 100, 101, 120,
        32, 61, 32, 115, 107, 98, 45, 62, 105, 102, 105, 110, 100, 101, 120, 59, 0, 9, 98, 112,
        102, 95, 114, 105, 110, 103, 98, 117, 102, 95, 115, 117, 98, 109, 105, 116, 40, 101, 44,
        32, 48, 41, 59, 0, 9, 114, 101, 116, 117, 114, 110, 32, 115, 107, 98, 45, 62, 108, 101,
        110, 59, 0, 125, 0, 108, 105, 99, 101, 110, 115, 101, 0, 46, 109, 97, 112, 115, 0, 115,
        111, 99, 107, 101, 116, 0, 159, 235, 1, 0, 32, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0,
        0, 44, 2, 0, 0, 64, 2, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 169, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        24, 0, 0, 0, 16, 0, 0, 0, 169, 5, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 224, 1, 0, 0, 25, 2, 0, 0,
        0, 128, 0, 0, 16, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 224, 1, 0, 0,
        67, 2, 0, 0, 2, 156, 0, 0, 48, 0, 0, 0, 224, 1, 0, 0, 108, 2, 0, 0, 10, 160, 0, 0, 72, 0,
        0, 0, 224, 1, 0, 0, 108, 2, 0, 0, 8, 160, 0, 0, 88, 0, 0, 0, 224, 1, 0, 0, 137, 2, 0, 0, 6,
        164, 0, 0, 104, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 224, 1, 0, 0,
        161, 2, 0, 0, 2, 104, 0, 0, 144, 0, 0, 0, 224, 1, 0, 0, 243, 2, 0, 0, 13, 108, 0, 0, 152,
        0, 0, 0, 224, 1, 0, 0, 22, 3, 0, 0, 18, 112, 0, 0, 160, 0, 0, 0, 224, 1, 0, 0, 62, 3, 0, 0,
        6, 176, 0, 0, 176, 0, 0, 0, 224, 1, 0, 0, 95, 3, 0, 0, 6, 192, 0, 0, 224, 0, 0, 0, 224, 1,
        0, 0, 141, 3, 0, 0, 6, 196, 0, 0, 232, 0, 0, 0, 224, 1, 0, 0, 150, 3, 0, 0, 72, 208, 0, 0,
        248, 0, 0, 0, 224, 1, 0, 0, 150, 3, 0, 0, 2, 208, 0, 0, 24, 1, 0, 0, 224, 1, 0, 0, 235, 3,
        0, 0, 9, 216, 0, 0, 32, 1, 0, 0, 224, 1, 0, 0, 235, 3, 0, 0, 6, 216, 0, 0, 40, 1, 0, 0,
        224, 1, 0, 0, 14, 4, 0, 0, 3, 220, 0, 0, 80, 1, 0, 0, 224, 1, 0, 0, 99, 4, 0, 0, 71, 224,
        0, 0, 96, 1, 0, 0, 224, 1, 0, 0, 99, 4, 0, 0, 3, 224, 0, 0, 136, 1, 0, 0, 224, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 144, 1, 0, 0, 224, 1, 0, 0, 184, 4, 0, 0, 2, 236, 0, 0, 176, 1, 0, 0,
        224, 1, 0, 0, 233, 4, 0, 0, 36, 240, 0, 0, 184, 1, 0, 0, 224, 1, 0, 0, 233, 4, 0, 0, 50,
        240, 0, 0, 200, 1, 0, 0, 224, 1, 0, 0, 233, 4, 0, 0, 32, 240, 0, 0, 208, 1, 0, 0, 224, 1,
        0, 0, 233, 4, 0, 0, 62, 240, 0, 0, 224, 1, 0, 0, 224, 1, 0, 0, 233, 4, 0, 0, 2, 240, 0, 0,
        248, 1, 0, 0, 224, 1, 0, 0, 50, 5, 0, 0, 21, 244, 0, 0, 0, 2, 0, 0, 224, 1, 0, 0, 50, 5, 0,
        0, 14, 244, 0, 0, 8, 2, 0, 0, 224, 1, 0, 0, 80, 5, 0, 0, 20, 248, 0, 0, 16, 2, 0, 0, 224,
        1, 0, 0, 80, 5, 0, 0, 13, 248, 0, 0, 24, 2, 0, 0, 224, 1, 0, 0, 108, 5, 0, 0, 2, 252, 0, 0,
        48, 2, 0, 0, 224, 1, 0, 0, 135, 5, 0, 0, 14, 4, 1, 0, 56, 2, 0, 0, 224, 1, 0, 0, 153, 5, 0,
        0, 1, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 72, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 1, 0,
        0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 3, 0, 0, 0, 0, 0, 0, 13, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32,
        0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 3, 0, 0, 0, 0, 0,
        0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 95, 0, 0, 0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 3,
        0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
        16, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 240, 3, 0, 0, 0, 0, 0, 0, 128, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 112, 13, 0, 0, 0, 0, 0, 0, 96, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
}
